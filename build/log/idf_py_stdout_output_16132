[1/18] Building C object esp-idf/wifi_config/CMakeFiles/__idf_wifi_config.dir/wifi_config.c.obj
[2/18] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D "D:\ESP\ESP_v5.1.5\ESP project v5.1.5\datn\build\bootloader\esp-idf\esptool_py" && D:\ESP\ESP_v5.1.5\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP/ESP_v5.1.5/Espressif/frameworks/esp-idf-v5.1.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP/ESP_v5.1.5/ESP project v5.1.5/datn/build/bootloader/bootloader.bin""
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[3/18] No install step for 'bootloader'
[4/18] Building C object esp-idf/http_method/CMakeFiles/__idf_http_method.dir/http_method.c.obj
[5/18] Building C object esp-idf/user_data/CMakeFiles/__idf_user_data.dir/user_data.c.obj
[6/18] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[7/18] Linking C static library esp-idf\user_data\libuser_data.a
[8/18] Completed 'bootloader'
[9/18] Linking C static library esp-idf\wifi_config\libwifi_config.a
[10/18] Building C object esp-idf/uart_lib/CMakeFiles/__idf_uart_lib.dir/uart_lib.c.obj
[11/18] Linking C static library esp-idf\http_method\libhttp_method.a
[12/18] Linking C static library esp-idf\uart_lib\libuart_lib.a
[13/18] Linking C static library esp-idf\main\libmain.a
[14/18] Generating ld/sections.ld
[15/18] Linking CXX executable datn.elf
[16/18] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 27 ELF sections
Successfully created esp32 image.
Generated D:/ESP/ESP_v5.1.5/ESP project v5.1.5/datn/build/datn.bin
[17/18] C:\WINDOWS\system32\cmd.exe /C "cd /D "D:\ESP\ESP_v5.1.5\ESP project v5.1.5\datn\build\esp-idf\esptool_py" && D:\ESP\ESP_v5.1.5\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/ESP/ESP_v5.1.5/Espressif/frameworks/esp-idf-v5.1.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP/ESP_v5.1.5/ESP project v5.1.5/datn/build/partition_table/partition-table.bin" "D:/ESP/ESP_v5.1.5/ESP project v5.1.5/datn/build/datn.bin""
datn.bin binary size 0xe3e20 bytes. Smallest app partition is 0x100000 bytes. 0x1c1e0 bytes (11%) free.
[17/18] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\ESP\ESP_v5.1.5\Espressif\frameworks\esp-idf-v5.1.5\components\esptool_py && D:\ESP\ESP_v5.1.5\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=D:/ESP/ESP_v5.1.5/Espressif/frameworks/esp-idf-v5.1.5 -D SERIAL_TOOL=D:/ESP/ESP_v5.1.5/Espressif/python_env/idf5.1_py3.11_env/Scripts/python.exe;;D:/ESP/ESP_v5.1.5/Espressif/frameworks/esp-idf-v5.1.5/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=D:/ESP/ESP_v5.1.5/ESP project v5.1.5/datn/build" -P D:/ESP/ESP_v5.1.5/Espressif/frameworks/esp-idf-v5.1.5/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 datn.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM5
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: cc:7b:5c:28:c2:a8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x000f3fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26720 bytes to 16733...
Writing at 0x00001000... (50 %)
Writing at 0x000076a1... (100 %)
Wrote 26720 bytes (16733 compressed) at 0x00001000 in 0.8 seconds (effective 278.7 kbit/s)...
Hash of data verified.
Compressed 933408 bytes to 600500...
Writing at 0x00010000... (2 %)
Writing at 0x0001c1c8... (5 %)
Writing at 0x0002152e... (8 %)
Writing at 0x00027bbd... (10 %)
Writing at 0x00033bee... (13 %)
Writing at 0x0003d04b... (16 %)
Writing at 0x00042b1a... (18 %)
Writing at 0x000483c8... (21 %)
Writing at 0x0004e0fb... (24 %)
Writing at 0x00053d18... (27 %)
Writing at 0x000599c2... (29 %)
Writing at 0x0005f5fe... (32 %)
Writing at 0x00064fcd... (35 %)
Writing at 0x0006aee6... (37 %)
Writing at 0x000701a4... (40 %)
Writing at 0x000758f8... (43 %)
Writing at 0x0007b022... (45 %)
Writing at 0x000804d4... (48 %)
Writing at 0x00085a8d... (51 %)
Writing at 0x0008b93c... (54 %)
Writing at 0x00091285... (56 %)
Writing at 0x00096813... (59 %)
Writing at 0x0009c033... (62 %)
Writing at 0x000a18f0... (64 %)
Writing at 0x000a701e... (67 %)
Writing at 0x000ac9fa... (70 %)
Writing at 0x000b27d5... (72 %)
Writing at 0x000b8507... (75 %)
Writing at 0x000bdc4d... (78 %)
Writing at 0x000c3535... (81 %)
Writing at 0x000c8fa8... (83 %)
Writing at 0x000d00e1... (86 %)
Writing at 0x000d9617... (89 %)
Writing at 0x000df66b... (91 %)
Writing at 0x000e555b... (94 %)
Writing at 0x000eafb5... (97 %)
Writing at 0x000f04f3... (100 %)
Wrote 933408 bytes (600500 compressed) at 0x00010000 in 14.7 seconds (effective 507.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 523.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
